/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;
import java.util.regex.*;  
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.VitalSigns;
import java.util.List;
import model.City;
import model.Community;
import model.Encounter;
import model.House;
import model.Patient;
import model.Patient_Directory;
import model.Person;
import model.Person_Directory;
import java.util.ArrayList;

/**
 *
 * @author kanis
 */
public class Main extends javax.swing.JFrame {
    
    ArrayList<VitalSigns> vslist; //Main ArrayList
    ArrayList<VitalSigns> queryRes; //Temporary ArryList
    ArrayList<VitalSigns> newList; //Temporary ArryList
    
    String header[] = new String[] {"Temperature","Blood Pressure","Pulse","Age","Date"}; //Table Header
    DefaultTableModel dtm; //View Table
    DefaultTableModel dtm2; //Search Table
    int row;
    int col;
    String rbtnHouse;
    String rbtnCommunity;
    Patient_Directory pd = new Patient_Directory();
    Patient pat1 = new Patient();
    VitalSigns vs1 = new VitalSigns();
    VitalSigns vs2 = new VitalSigns();
    VitalSigns vs3 = new VitalSigns();
    VitalSigns vs4 = new VitalSigns();
    VitalSigns vs5 = new VitalSigns();
    VitalSigns vs6 = new VitalSigns();
    VitalSigns vs7 = new VitalSigns();
    VitalSigns vs8 = new VitalSigns();
    VitalSigns vs9 = new VitalSigns();
    Encounter en1 = new Encounter(vs1);
    Encounter en2 = new Encounter(vs2);
    Encounter en3 = new Encounter(vs3);
    Encounter en4 = new Encounter(vs4);
    Encounter en5 = new Encounter(vs5);
    Encounter en6 = new Encounter(vs6);
    Encounter en8 = new Encounter(vs8);
    Encounter en9 = new Encounter(vs9);
    House house1 = new House();
    House house2 = new House();
    House house3 = new House();
    House house4 = new House();
    Community comm1 = new Community();
    Community comm2 = new Community();
    /**
     * Creates new form Main
     */
    public Main() {
        initComponents();
        Patient_Directory pd = new Patient_Directory();
        vslist= new ArrayList<>();
        queryRes=new ArrayList<>();
        dtm = new DefaultTableModel(header,0);
        tblView.setModel(dtm);
        this.setLocationRelativeTo(null); //Set Interface to center
    }
    
    private void clearField() {
        txtRespiratoryRate.requestFocus();
        txtRespiratoryRate.setText("");
        txtBloodPressure.setText("");
        txtHeartRate.setText("");
        txtWeight.setText("");
        txtDate.setText("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        buttonGroup4 = new javax.swing.ButtonGroup();
        lblRespiratoryRate = new javax.swing.JLabel();
        lblBloodPressure = new javax.swing.JLabel();
        lblHeartRate = new javax.swing.JLabel();
        lblWeight = new javax.swing.JLabel();
        lblDate = new javax.swing.JLabel();
        txtBloodPressure = new javax.swing.JTextField();
        txtRespiratoryRate = new javax.swing.JTextField();
        txtHeartRate = new javax.swing.JTextField();
        txtWeight = new javax.swing.JTextField();
        txtDate = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblView = new javax.swing.JTable();
        btnAdd = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        txtLastName = new javax.swing.JTextField();
        lblFirstName = new javax.swing.JLabel();
        lblLastName = new javax.swing.JLabel();
        txtFirstName = new javax.swing.JTextField();
        txtZipCode = new javax.swing.JTextField();
        lblFirstName1 = new javax.swing.JLabel();
        lblZipCode = new javax.swing.JLabel();
        txtContactNo = new javax.swing.JTextField();
        lblAge = new javax.swing.JLabel();
        txtAge = new javax.swing.JTextField();
        txtID = new javax.swing.JTextField();
        lblID = new javax.swing.JLabel();
        lblHouse = new javax.swing.JLabel();
        rbtnHouse1 = new javax.swing.JRadioButton();
        rbtnHouse2 = new javax.swing.JRadioButton();
        rbtnHouse3 = new javax.swing.JRadioButton();
        rbtnHouse4 = new javax.swing.JRadioButton();
        lblCommunity = new javax.swing.JLabel();
        rbtnCommunity1 = new javax.swing.JRadioButton();
        rbtnCommunity2 = new javax.swing.JRadioButton();
        btnCheck = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblRespiratoryRate.setText("Respiratory Rate:");

        lblBloodPressure.setText("Blood Pressure:");

        lblHeartRate.setText("Heart Rate:");

        lblWeight.setText("Weight:");

        lblDate.setText("Date:");

        txtRespiratoryRate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRespiratoryRateActionPerformed(evt);
            }
        });

        tblView.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Temperature", "Blood Pressure", "Pulse", "Age", "Date"
            }
        ));
        tblView.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblViewMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblView);

        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        lblFirstName.setText("First Name:");

        lblLastName.setText("Last Name:");

        lblFirstName1.setText("Contact Number:");

        lblZipCode.setText("Zip Code:");

        lblAge.setText("Age:");

        txtID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIDActionPerformed(evt);
            }
        });

        lblID.setText("ID:");

        lblHouse.setText("House:");

        buttonGroup1.add(rbtnHouse1);
        rbtnHouse1.setText("House 1");
        rbtnHouse1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnHouse1ActionPerformed(evt);
            }
        });

        buttonGroup1.add(rbtnHouse2);
        rbtnHouse2.setText("House 2");
        rbtnHouse2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnHouse2ActionPerformed(evt);
            }
        });

        buttonGroup1.add(rbtnHouse3);
        rbtnHouse3.setText("House 3");
        rbtnHouse3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnHouse3ActionPerformed(evt);
            }
        });

        buttonGroup1.add(rbtnHouse4);
        rbtnHouse4.setText("House 4");
        rbtnHouse4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnHouse4ActionPerformed(evt);
            }
        });

        lblCommunity.setText("Community:");

        buttonGroup2.add(rbtnCommunity1);
        rbtnCommunity1.setText("Community 1");
        rbtnCommunity1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnCommunity1ActionPerformed(evt);
            }
        });

        buttonGroup2.add(rbtnCommunity2);
        rbtnCommunity2.setText("Community 2");
        rbtnCommunity2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnCommunity2ActionPerformed(evt);
            }
        });

        btnCheck.setText("Check");
        btnCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCheckActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 700, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblAge, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lblBloodPressure, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblRespiratoryRate, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblHeartRate, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblWeight, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblDate, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblZipCode, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblFirstName1, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lblID)
                            .addComponent(lblHouse)
                            .addComponent(lblCommunity))
                        .addGap(50, 50, 50)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtRespiratoryRate, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtBloodPressure, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtHeartRate, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtWeight, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(0, 78, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtContactNo, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtZipCode, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGap(94, 94, 94)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(btnAdd, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(btnDelete)
                                        .addComponent(btnUpdate))
                                    .addComponent(btnCheck))
                                .addGap(481, 481, 481))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(rbtnHouse1)
                                        .addGap(18, 18, 18)
                                        .addComponent(rbtnHouse2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(rbtnHouse3))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(rbtnCommunity1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(rbtnCommunity2)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rbtnHouse4)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnAdd, btnDelete, btnUpdate});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {lblBloodPressure, lblDate, lblFirstName, lblFirstName1, lblHeartRate, lblLastName, lblRespiratoryRate, lblWeight, lblZipCode});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {txtAge, txtBloodPressure, txtContactNo, txtDate, txtFirstName, txtHeartRate, txtID, txtLastName, txtRespiratoryRate, txtWeight, txtZipCode});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblFirstName)
                            .addComponent(txtFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblLastName)
                            .addComponent(txtLastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblFirstName1)
                            .addComponent(txtContactNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(btnAdd)
                        .addGap(18, 18, 18)
                        .addComponent(btnUpdate)
                        .addGap(18, 18, 18)
                        .addComponent(btnDelete)))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblZipCode)
                    .addComponent(txtZipCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 25, Short.MAX_VALUE)
                        .addComponent(lblDate))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnCheck))))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblRespiratoryRate)
                    .addComponent(txtRespiratoryRate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblBloodPressure)
                    .addComponent(txtBloodPressure, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblHeartRate)
                        .addGap(24, 24, 24))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(txtHeartRate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblWeight)
                    .addComponent(txtWeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblAge)
                    .addComponent(txtAge, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblID)
                    .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblHouse)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(rbtnHouse1)
                        .addComponent(rbtnHouse2)
                        .addComponent(rbtnHouse3)
                        .addComponent(rbtnHouse4)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblCommunity)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(rbtnCommunity1)
                        .addComponent(rbtnCommunity2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 54, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        Patient_Directory pd = new Patient_Directory();
        
        if(txtFirstName.getText().isEmpty() || txtLastName.getText().isEmpty() || txtContactNo.getText().isEmpty() ||txtZipCode.getText().isEmpty() || txtRespiratoryRate.getText().isEmpty()|| txtBloodPressure.getText().isEmpty()|| txtHeartRate.getText().isEmpty()|| txtWeight.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Don't leave empty","Error",JOptionPane.ERROR_MESSAGE);
        }
        else{
            try{
                String firstName = txtFirstName.getText();
                String lastName = txtLastName.getText();
                String contact = txtContactNo.getText();
                String zipcode = txtZipCode.getText();
                int respiratoryrate = Integer.parseInt(txtRespiratoryRate.getText());
                int bloodpressure = Integer.parseInt(txtBloodPressure.getText());
                int heartrate = Integer.parseInt(txtHeartRate.getText());
                double weight = Double.parseDouble(txtWeight.getText());
                String date = txtDate.getText();
                int age = Integer.parseInt(txtAge.getText());
                String id = txtID.getText();
                String house = rbtnHouse;
                String community = rbtnCommunity;
                
                if(id=="1"){
                    Patient pat1 = new Patient();
                    VitalSigns vs1 = new VitalSigns();
                
                    pat1.setFirstName(firstName);
                    pat1.setLastName(lastName);
                    pat1.setContact(contact);
                    pat1.setZipcode(zipcode);
                    
                    vs1.setAge(age);
                    vs1.setDate(date);
                    vs1.setRes_rate(respiratoryrate);
                    vs1.setHeart_rate(heartrate);
                    vs1.setBlood_press(bloodpressure); 
                    vs1.setWeight_kg(weight);
                    
                    //Create Encounter for vs1
                    Encounter en1 = new Encounter(vs1);
                    //Add en1 to patient 1 encounter list
                    pat1.Enclist.add(en1);
                    //Add patient 1 to patient directory
                    pd.addPatient(pat1);
                    if(house=="1"){
                        House house1 = new House();
                        house1.prsn.add(pat1);
                        if(community=="1"){
                            Community comm1 = new Community();
                            comm1.houses.add(house1);
                                City city = new City();
                                city.cmty.add(comm1);
                        }
                        else if(community=="2"){
                            Community comm2 = new Community();
                            comm2.houses.add(house1);
                                City city = new City();
                                city.cmty.add(comm2);
                        }
                        
                    }
                    else if(house=="2"){
                        House house2 = new House();
                        house2.prsn.add(pat1);
                        if(community=="1"){
                            Community comm1 = new Community();
                            comm1.houses.add(house2);
                                City city = new City();
                                city.cmty.add(comm1);
                        }
                        else if(community=="2"){
                            Community comm2 = new Community();
                            comm2.houses.add(house2);
                                City city = new City();
                                city.cmty.add(comm2);
                        }
                    }
                    else if(house=="3"){
                        House house3 = new House();
                        house3.prsn.add(pat1);
                        if(community=="1"){
                            Community comm1 = new Community();
                            comm1.houses.add(house3);
                                City city = new City();
                                city.cmty.add(comm1);
                        }
                        else if(community=="2"){
                            Community comm2 = new Community();
                            comm2.houses.add(house3);
                                City city = new City();
                                city.cmty.add(comm2);
                        }
                    }
                    else if(house=="4"){
                        House house4 = new House();
                        house4.prsn.add(pat1);
                        if(community=="1"){
                            Community comm1 = new Community();
                            comm1.houses.add(house4);
                                City city = new City();
                                city.cmty.add(comm1);
                        }
                        else if(community=="2"){
                            Community comm2 = new Community();
                            comm2.houses.add(house4);
                                City city = new City();
                                city.cmty.add(comm2);
                        }
                    } 
                }               
                JOptionPane.showMessageDialog(this, "Information Added");
                clearField();
            }catch (Exception e){
                e.printStackTrace();
            }
        } 
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        
        /*int dialogButton = JOptionPane.YES_NO_OPTION;
        int dialogResult = JOptionPane.showConfirmDialog(this, "Delete this data", "Delete", dialogButton);
        if(dialogResult == 0){
            dtm.removeRow(row);
            vslist.remove(row);
            dtm.setRowCount(0);
            for(int i = 0; i < vslist.size();i++){
                Object[] objs = {vslist.get(i).temperature, vslist.get(i).bloodpressure, vslist.get(i).pulse, vslist.get(i).age};
                dtm.addRow(objs);
            }
            clearField();
        }*/
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        /*String updatetemperature = txtTemperature.getText();
        String updatebloodpressure = txtBloodPressure.getText();
        String updatepulse = txtPulse.getText();
        String updateage = txtAge.getText();
        String updatedate = txtDate.getText();
        
        vslist.get(row).temperature = updatetemperature;
        vslist.get(row).bloodpressure = updatebloodpressure;
        vslist.get(row).pulse = updatepulse;
        vslist.get(row).age = updateage;
                
        dtm.setRowCount(0); //Reset table and populate
        for(int i = 0; i < vslist.size();i++){
                Object[] objs = {vslist.get(i).temperature, vslist.get(i).bloodpressure, vslist.get(i).pulse, vslist.get(i).age};
                dtm.addRow(objs);
            }*/
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void tblViewMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblViewMouseClicked
        // TODO add your handling code here:
        row = tblView.getSelectedRow();
        col = tblView.getSelectedColumn();
        System.out.println(row + "" + col);
        txtRespiratoryRate.setText(dtm.getValueAt(row, 0).toString());
        txtBloodPressure.setText(dtm.getValueAt(row, 1).toString());
        txtHeartRate.setText(dtm.getValueAt(row, 2).toString());
        txtWeight.setText(dtm.getValueAt(row, 3).toString());
    }//GEN-LAST:event_tblViewMouseClicked

    private void txtIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIDActionPerformed

    private void txtRespiratoryRateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRespiratoryRateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRespiratoryRateActionPerformed

    private void rbtnHouse1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnHouse1ActionPerformed
        // TODO add your handling code here:
        rbtnHouse="1";
    }//GEN-LAST:event_rbtnHouse1ActionPerformed

    private void rbtnHouse2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnHouse2ActionPerformed
        // TODO add your handling code here:
        rbtnHouse="2";
    }//GEN-LAST:event_rbtnHouse2ActionPerformed

    private void rbtnHouse3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnHouse3ActionPerformed
        // TODO add your handling code here:
        rbtnHouse="3";
    }//GEN-LAST:event_rbtnHouse3ActionPerformed

    private void rbtnHouse4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnHouse4ActionPerformed
        // TODO add your handling code here:
        rbtnHouse="4";
    }//GEN-LAST:event_rbtnHouse4ActionPerformed

    private void rbtnCommunity1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnCommunity1ActionPerformed
        // TODO add your handling code here:
        rbtnCommunity="1";
    }//GEN-LAST:event_rbtnCommunity1ActionPerformed

    private void rbtnCommunity2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnCommunity2ActionPerformed
        // TODO add your handling code here:
        rbtnCommunity="2";
    }//GEN-LAST:event_rbtnCommunity2ActionPerformed

    private void btnCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCheckActionPerformed
        // TODO add your handling code here:
        
        int comm1cnt = 0;
            for (House h : comm1.houses) {
                for (Person p : h.prsn) {
                    Patient pat = (Patient) p;
                    
                    if (!pat.Enclist.get(pat.Enclist.size() - 1).evs.isThisVitalSignNormal("BloodPressure")) {
                        comm1cnt++;
                       System.out.println("Patient with Abnormal Blood Pressure: " + pat);
                    }

                }
            }
        System.out.println("Count of patients with abnormal blood pressure for first comunity is: " + comm1cnt);
        
        
        int comm2cnt= 0;
        for (House h : comm2.houses) {
                for (Person p : h.prsn) {
                    Patient pat = (Patient) p;
                    if (!pat.Enclist.get(pat.Enclist.size() - 1).evs.isThisVitalSignNormal("BloodPressure")) {
                        comm2cnt++;
                        System.out.println("patient with Abnormal Blood Pressure: " + pat);
                    }
                }
            }
        System.out.println("Count of patients with abnormal blood pressure for second comunity is: " + comm2cnt);
        
        int cityab = comm1cnt + comm2cnt;
        System.out.println("Total number of patients with abnormal blood pressure in the entire city is: " + cityab);
    }//GEN-LAST:event_btnCheckActionPerformed
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnCheck;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnUpdate;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.ButtonGroup buttonGroup4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAge;
    private javax.swing.JLabel lblBloodPressure;
    private javax.swing.JLabel lblCommunity;
    private javax.swing.JLabel lblDate;
    private javax.swing.JLabel lblFirstName;
    private javax.swing.JLabel lblFirstName1;
    private javax.swing.JLabel lblHeartRate;
    private javax.swing.JLabel lblHouse;
    private javax.swing.JLabel lblID;
    private javax.swing.JLabel lblLastName;
    private javax.swing.JLabel lblRespiratoryRate;
    private javax.swing.JLabel lblWeight;
    private javax.swing.JLabel lblZipCode;
    private javax.swing.JRadioButton rbtnCommunity1;
    private javax.swing.JRadioButton rbtnCommunity2;
    private javax.swing.JRadioButton rbtnHouse1;
    private javax.swing.JRadioButton rbtnHouse2;
    private javax.swing.JRadioButton rbtnHouse3;
    private javax.swing.JRadioButton rbtnHouse4;
    private javax.swing.JTable tblView;
    private javax.swing.JTextField txtAge;
    private javax.swing.JTextField txtBloodPressure;
    private javax.swing.JTextField txtContactNo;
    private javax.swing.JTextField txtDate;
    private javax.swing.JTextField txtFirstName;
    private javax.swing.JTextField txtHeartRate;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtLastName;
    private javax.swing.JTextField txtRespiratoryRate;
    private javax.swing.JTextField txtWeight;
    private javax.swing.JTextField txtZipCode;
    // End of variables declaration//GEN-END:variables
}
