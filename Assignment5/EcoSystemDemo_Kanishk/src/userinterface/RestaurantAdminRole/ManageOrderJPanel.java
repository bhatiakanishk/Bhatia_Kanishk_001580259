/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.RestaurantAdminRole;
import Business.Customer.Customer;
import Business.Customer.CustomerDirectory;
import Business.DeliveryMan.DeliveryMan;
import Business.DeliveryMan.DeliveryManDirectory;
import Business.EcoSystem;
import Business.Restaurant.FinalOrder;
import Business.Restaurant.Order;
import Business.Restaurant.Restaurant;
import Business.Restaurant.RestaurantDirectory;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.plaf.basic.BasicInternalFrameTitlePane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author kanishk
 */
public class ManageOrderJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageOrderjPanel
     */
    JPanel userProcessContainer;
    EcoSystem ecosystem;
    UserAccount usracc;
    Restaurant rst;
    RestaurantDirectory rstdir;
    CustomerDirectory cstdir;
    ArrayList<FinalOrder> ordrsList;
    DeliveryManDirectory deldir;
    public ManageOrderJPanel(JPanel userProcessContainer, Restaurant restaurant, EcoSystem system) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.rst = restaurant;
        this.ecosystem = system;
        populatetable();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ordersAvailble = new javax.swing.JTable();
        btnAccept = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Orders Placed");

        ordersAvailble.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Customer", "Item", "Date"
            }
        ));
        jScrollPane1.setViewportView(ordersAvailble);

        btnAccept.setText("Accept");
        btnAccept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAcceptActionPerformed(evt);
            }
        });

        jButton1.setText("<< Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 437, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jButton1)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(179, 179, 179)
                .addComponent(btnAccept)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnAccept)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAcceptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAcceptActionPerformed
        // TODO add your handling code here:

        if(rst.getOrdrAcptd()== null)
        rst.setOrdrAcptd(new ArrayList<FinalOrder>());
        ArrayList<FinalOrder> orders = rst.getOrdrAcptd();
        rstdir = ecosystem.getRestaurantDirectory();
        int orderId = rstdir.generateOrderId();
        FinalOrder fnlord = new FinalOrder();
        DefaultTableModel df = (DefaultTableModel) ordersAvailble.getModel();

        int selectedRow = ordersAvailble.getSelectedRow();
        
        String customer = df.getValueAt(selectedRow,0).toString();
        String item = df.getValueAt(selectedRow, 1).toString();
        String date = df.getValueAt(selectedRow,2).toString();
        
        fnlord.setOrderId(String.valueOf(orderId));
        fnlord.setCustomer(customer);
        fnlord.setItm(item);
        fnlord.setDate(date);
        fnlord.setRestaurant(rst.getName());
        fnlord.setStatus("Order Accepted");
        orders.add(fnlord);
        df.removeRow(selectedRow);
        populatetable();
    }//GEN-LAST:event_btnAcceptActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        CardLayout crdLyt = (CardLayout) userProcessContainer.getLayout();
        crdLyt.show(userProcessContainer,"RestaurantAdmin");
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAccept;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable ordersAvailble;
    // End of variables declaration//GEN-END:variables

    private void populatetable() {
      String resoName = rst.getName();
        cstdir = ecosystem.getCustomerDirectory();
        DefaultTableModel dtm = (DefaultTableModel) ordersAvailble.getModel();
        dtm.setRowCount(0);
        ArrayList<Customer> customers = cstdir.getCstmrList();
        for(Customer c: customers){
            ArrayList<Order> orders = c.getPreviousOrders();
            for(Order o: orders){
                if(o.getRestaurant().equals(resoName)){
                    String[] row = {c.getCstmrName(),o.getItm(),o.getEntryDT().toString()};
                    dtm.addRow(row);
                }
            }
        }
        ordersAvailble.setModel(dtm);  
    }
}
