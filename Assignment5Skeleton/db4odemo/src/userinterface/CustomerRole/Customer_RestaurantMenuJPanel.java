/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.CustomerRole;
import Business.Customer.Customer;
import Business.Customer.CustomerDirectory;
import Business.EcoSystem;
import Business.Restaurant.Cart;
import Business.Restaurant.Restaurant;
import Business.Restaurant.RestaurantDirectory;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
//import userinterface.createNewUser.createLogin;

/**
 *
 * @author isham.
 */
public class Customer_RestaurantMenuJPanel extends javax.swing.JPanel {

    /**
     * Creates new form Customer_RestaurantMenuJPanel
     * 
     */
    UserAccount usracc;
    EcoSystem ecosystem;
    RestaurantDirectory resdir;
    CustomerDirectory cd;
    private JPanel userProcessContainer;
    public Customer_RestaurantMenuJPanel(JPanel userProcessContainer, UserAccount usracc, EcoSystem system) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.usracc = usracc;
        this.ecosystem = system;
        if(ecosystem.getCustomerDirectory() == null)
            ecosystem.setCustomerDirectory(new CustomerDirectory());
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        restaurantItems = new javax.swing.JTable();
        addToCart = new javax.swing.JButton();
        proceedToCart = new javax.swing.JButton();

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Items Available");

        restaurantItems.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Restaurant", "Item"
            }
        ));
        jScrollPane1.setViewportView(restaurantItems);

        addToCart.setText("Add to cart");
        addToCart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addToCartActionPerformed(evt);
            }
        });

        proceedToCart.setText("Proceed to cart >>");
        proceedToCart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                proceedToCartActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(addToCart)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(proceedToCart)
                        .addGap(0, 13, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {addToCart, proceedToCart});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addToCart)
                    .addComponent(proceedToCart))
                .addGap(21, 21, 21))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void addToCartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addToCartActionPerformed
        // TODO add your handling code here:
        DefaultTableModel df = (DefaultTableModel) restaurantItems.getModel();

        int selectedRow = restaurantItems.getSelectedRow();
        //if(selectedRow == null)
        //  JOptionPane.showMessageDialog(this, "No Item Selected");
        String resto = df.getValueAt(selectedRow,0).toString();
        String item = df.getValueAt(selectedRow, 1).toString();
        Cart crt = new Cart(resto, item);

        //   if(ecosystem.getCustomerDirectory() == null)
        //       ecosystem.setCustomerDirectory(new ());

        cd = ecosystem.getCustomerDirectory();

        Customer c = cd.getCustomer(usracc);
        c.addToCart(crt);
        JOptionPane.showMessageDialog(this, "Added to cart");

    }//GEN-LAST:event_addToCartActionPerformed

    private void proceedToCartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_proceedToCartActionPerformed
        // TODO add your handling code here:
        cd = ecosystem.getCustomerDirectory();
        Customer c = cd.getCustomer(usracc);
        Customer_CartJPanel cart = new Customer_CartJPanel(userProcessContainer,c, ecosystem);
        userProcessContainer.add("cart",cart);
        CardLayout cl = (CardLayout) userProcessContainer.getLayout();
        cl.show(userProcessContainer,"cart");
    }//GEN-LAST:event_proceedToCartActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addToCart;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton proceedToCart;
    private javax.swing.JTable restaurantItems;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
        resdir = ecosystem.getRestaurantDirectory();
        ArrayList<Restaurant> rstList = resdir.getRstrntList();
        
        DefaultTableModel tablemodel = (DefaultTableModel) restaurantItems.getModel();
            tablemodel.setRowCount(0);
        
        for(Restaurant r: rstList)
        {
            if(r.getMenu() == null)
                r.setMenu(new ArrayList<String>());
            
            ArrayList<String> items = r.getMenu();
            
            for(String s: items)
            {
                String[] row = {r.getName(),s};
                tablemodel.addRow(row);
            }
        }
        
        restaurantItems.setModel(tablemodel);
        
    }
}
