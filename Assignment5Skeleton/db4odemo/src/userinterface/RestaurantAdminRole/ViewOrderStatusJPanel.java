/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.RestaurantAdminRole;
import Business.Customer.Customer;
import Business.Customer.CustomerDirectory;
import Business.DeliveryMan.DeliveryManDirectory;
import Business.EcoSystem;
import Business.Restaurant.FinalOrder;
import Business.Restaurant.Order;
import Business.Restaurant.Restaurant;
import Business.Restaurant.RestaurantDirectory;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.JPanel;
import java.awt.CardLayout;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author kanishk
 */
public class ViewOrderStatusJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewOrderStatusJPanel
     */
    JPanel userProcessContainer;
    EcoSystem ecosystem;
    UserAccount usracc;
    Restaurant rst;
    RestaurantDirectory rstdir;
    CustomerDirectory cstdir;
    ArrayList<FinalOrder> ordrsList;
    DeliveryManDirectory deldir;
    public ViewOrderStatusJPanel(JPanel userProcessContainer,Restaurant restaurant,EcoSystem system) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.ecosystem = system;
        this.rst = restaurant;
        rstdir= ecosystem.getRestaurantDirectory();
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        OrderStatusJTable = new javax.swing.JTable();
        btnBack = new javax.swing.JButton();
        btnDeliveryStatus = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        OrderStatusJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Order ID", "Restaurant", "Item", "Customer", "Order Time", "Status"
            }
        ));
        jScrollPane1.setViewportView(OrderStatusJTable);

        btnBack.setText("<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnDeliveryStatus.setText("Change Delivery Status");
        btnDeliveryStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeliveryStatusActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Order Status");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(btnBack))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(221, 221, 221)
                                .addComponent(btnDeliveryStatus)))
                        .addGap(0, 176, Short.MAX_VALUE))
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 580, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnBack)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 179, Short.MAX_VALUE)
                .addComponent(btnDeliveryStatus)
                .addGap(29, 29, 29))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(75, 75, 75)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 149, Short.MAX_VALUE)
                    .addGap(76, 76, 76)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        CardLayout crdLyt = (CardLayout) userProcessContainer.getLayout();
        crdLyt.show(userProcessContainer,"RestaurantAdmin");
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnDeliveryStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeliveryStatusActionPerformed
        // TODO add your handling code here:
        int selectedRow = OrderStatusJTable.getSelectedRow();
        
        if (selectedRow < 0){
            return;
        }
        DefaultTableModel df = (DefaultTableModel) OrderStatusJTable.getModel();
        String orderId = df.getValueAt(selectedRow,0).toString();
        FinalOrder fo = rstdir.getFinalOrder(orderId);
     
        fo.setStatus("Order out for delivery!");
    }//GEN-LAST:event_btnDeliveryStatusActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable OrderStatusJTable;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnDeliveryStatus;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
        String resoName = rst.getName();
        cstdir = ecosystem.getCustomerDirectory();
        DefaultTableModel dtm = (DefaultTableModel) OrderStatusJTable.getModel();
        dtm.setRowCount(0);
        ArrayList<FinalOrder> orders;
        ArrayList<Restaurant> restos = rstdir.getRstrntList();
        ArrayList<Customer> customers = cstdir.getCstmrList();
        for(Restaurant r: restos)
        {
            if(r.getOrdrAcptd() == null)
                r.setOrdrAcptd(new ArrayList<FinalOrder>());
            orders = r.getOrdrAcptd();
            for(FinalOrder f: orders)
            {
                String[] row = {f.getOrderId(),r.getName(),f.getItm(),f.getCustomer(),f.getDate(),f.getStatus()};
                dtm.addRow(row);
            }
        }
        
        OrderStatusJTable.setModel(dtm);  
    }
}
