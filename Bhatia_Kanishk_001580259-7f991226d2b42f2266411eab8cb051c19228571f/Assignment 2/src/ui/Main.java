/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;
import java.util.regex.*;  
import java.sql.Timestamp;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Cars;
import java.util.ArrayList;
import java.util.HashSet;

/**
 *
 * @author kanis
 */
public class Main extends javax.swing.JFrame {
    
    ArrayList<Cars> carlist; //Main ArrayList
    ArrayList<Cars> queryRes; //Temporary ArryList
    ArrayList<Cars> newList; 
    String header[] = new String[] {"Manufacturer","Model","Year","Seats","Serial Number","City","Valid Certificate","Available"}; //Table Header
    DefaultTableModel dtm; //View Table
    DefaultTableModel dtm2; //Search Table
    int row;
    int col;
    String rbtn1; //Radio Button 1 variable
    String rbtn2; //Radio Button 2 variable
    Timestamp timestamp = new Timestamp(System.currentTimeMillis()); //Time Stamp

    /**
     * Creates new form Main
     */
    public Main() {
        initComponents();
        carlist= new ArrayList<>();
        queryRes=new ArrayList<>();
        dtm = new DefaultTableModel(header,0);
        tblView.setModel(dtm);
        dtm2 = new DefaultTableModel(header,0);
        tblSearch.setModel(dtm2);
       this.setLocationRelativeTo(null); //Set Interface to center
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        buttonGroup4 = new javax.swing.ButtonGroup();
        buttonGroup5 = new javax.swing.ButtonGroup();
        buttonGroup6 = new javax.swing.ButtonGroup();
        buttonGroup7 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        lblManufacturer = new javax.swing.JLabel();
        lblModel = new javax.swing.JLabel();
        lblYear = new javax.swing.JLabel();
        lblSeats = new javax.swing.JLabel();
        lblSrNo = new javax.swing.JLabel();
        lblCity = new javax.swing.JLabel();
        lblCertificate = new javax.swing.JLabel();
        lblAvailable = new javax.swing.JLabel();
        txtManufacturer = new javax.swing.JTextField();
        txtModel = new javax.swing.JTextField();
        txtYear = new javax.swing.JTextField();
        txtSeats = new javax.swing.JTextField();
        txtSrNo = new javax.swing.JTextField();
        txtCity = new javax.swing.JTextField();
        btnSearchManufacturer = new javax.swing.JButton();
        rbtnYes = new javax.swing.JRadioButton();
        rbtnNo = new javax.swing.JRadioButton();
        btnSearchAvailability = new javax.swing.JButton();
        btnSearchYear = new javax.swing.JButton();
        btnSearchSrNo = new javax.swing.JButton();
        btnSearchMaintenance = new javax.swing.JButton();
        btnSearchNoAva = new javax.swing.JButton();
        btnSearchCity = new javax.swing.JButton();
        btnSearchModel = new javax.swing.JButton();
        btnViewManufacturer = new javax.swing.JButton();
        btnSearchSeats = new javax.swing.JButton();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        btnTimeUpdated = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        lblManufacturerVal = new javax.swing.JLabel();
        lblModelVal = new javax.swing.JLabel();
        lblYearVal = new javax.swing.JLabel();
        lblSeatVal = new javax.swing.JLabel();
        lblSrNoVal = new javax.swing.JLabel();
        lblCityVal = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblSearch = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblView = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        jLabel3.setText("Model:");

        jLabel9.setText("Valid Maintenance Certificate (Yes/No):");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblManufacturer.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblManufacturer.setText("Manufacturer:");

        lblModel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblModel.setText("Model:");

        lblYear.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblYear.setText("Year:");

        lblSeats.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblSeats.setText("Number of seats:");

        lblSrNo.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblSrNo.setText("Serial Number (5-digit):");

        lblCity.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblCity.setText("City:");

        lblCertificate.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblCertificate.setText("Valid Maintenance Certificate:");

        lblAvailable.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblAvailable.setText("Car Available (Yes/No):");

        txtManufacturer.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtManufacturerKeyReleased(evt);
            }
        });

        txtModel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtModelKeyReleased(evt);
            }
        });

        txtYear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtYearActionPerformed(evt);
            }
        });
        txtYear.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtYearKeyReleased(evt);
            }
        });

        txtSeats.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSeatsActionPerformed(evt);
            }
        });
        txtSeats.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSeatsKeyReleased(evt);
            }
        });

        txtSrNo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSrNoKeyReleased(evt);
            }
        });

        txtCity.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCityKeyReleased(evt);
            }
        });

        btnSearchManufacturer.setText("Search Manufacturer");
        btnSearchManufacturer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchManufacturerActionPerformed(evt);
            }
        });

        buttonGroup1.add(rbtnYes);
        rbtnYes.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        rbtnYes.setText("Yes");
        rbtnYes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnYesActionPerformed(evt);
            }
        });

        buttonGroup1.add(rbtnNo);
        rbtnNo.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        rbtnNo.setText("No");
        rbtnNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnNoActionPerformed(evt);
            }
        });

        btnSearchAvailability.setText("Search Availability");
        btnSearchAvailability.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchAvailabilityActionPerformed(evt);
            }
        });

        btnSearchYear.setText("Search Year");
        btnSearchYear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchYearActionPerformed(evt);
            }
        });

        btnSearchSrNo.setText("Search Serial Number");
        btnSearchSrNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchSrNoActionPerformed(evt);
            }
        });

        btnSearchMaintenance.setText("Search Maintenance");
        btnSearchMaintenance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchMaintenanceActionPerformed(evt);
            }
        });

        btnSearchNoAva.setText("Search Number of Available");
        btnSearchNoAva.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchNoAvaActionPerformed(evt);
            }
        });

        btnSearchCity.setText("Search City");
        btnSearchCity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchCityActionPerformed(evt);
            }
        });

        btnSearchModel.setText("Search Model");
        btnSearchModel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchModelActionPerformed(evt);
            }
        });

        btnViewManufacturer.setText("View Manufacturer");
        btnViewManufacturer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewManufacturerActionPerformed(evt);
            }
        });

        btnSearchSeats.setText("Search Seats");
        btnSearchSeats.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchSeatsActionPerformed(evt);
            }
        });

        buttonGroup2.add(jRadioButton1);
        jRadioButton1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jRadioButton1.setText("Yes");
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });

        buttonGroup2.add(jRadioButton2);
        jRadioButton2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jRadioButton2.setText("No");
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });

        btnTimeUpdated.setText("Time Updated");
        btnTimeUpdated.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimeUpdatedActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        lblManufacturerVal.setForeground(new java.awt.Color(255, 0, 0));

        lblModelVal.setForeground(new java.awt.Color(255, 0, 0));

        lblYearVal.setForeground(new java.awt.Color(255, 0, 0));

        lblSeatVal.setForeground(new java.awt.Color(255, 0, 0));

        lblSrNoVal.setForeground(new java.awt.Color(255, 0, 0));

        lblCityVal.setForeground(new java.awt.Color(255, 0, 0));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblManufacturer)
                    .addComponent(lblModel)
                    .addComponent(lblYear)
                    .addComponent(lblSeats)
                    .addComponent(lblSrNo)
                    .addComponent(lblCity)
                    .addComponent(lblCertificate)
                    .addComponent(lblAvailable))
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtModel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE)
                            .addComponent(txtYear, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtSeats, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtSrNo, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtCity, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtManufacturer))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblManufacturerVal, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblModelVal, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblYearVal, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblSeatVal, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblSrNoVal, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblCityVal, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(rbtnYes)
                        .addGap(18, 18, 18)
                        .addComponent(rbtnNo))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jRadioButton1)
                        .addGap(18, 18, 18)
                        .addComponent(jRadioButton2)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnAdd)
                            .addComponent(btnClear))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnDelete)
                            .addComponent(btnUpdate)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnSearchManufacturer)
                            .addComponent(btnSearchAvailability))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnSearchSrNo)
                                .addGap(18, 18, 18)
                                .addComponent(btnSearchNoAva)
                                .addGap(18, 18, 18)
                                .addComponent(btnSearchModel))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnSearchYear, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnSearchMaintenance)
                                .addGap(18, 18, 18)
                                .addComponent(btnSearchCity))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnViewManufacturer)
                        .addGap(18, 18, 18)
                        .addComponent(btnSearchSeats)
                        .addGap(18, 18, 18)
                        .addComponent(btnTimeUpdated)))
                .addGap(30, 30, 30))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnSearchAvailability, btnSearchCity, btnSearchMaintenance, btnSearchManufacturer, btnSearchModel, btnSearchNoAva, btnSearchSeats, btnSearchSrNo, btnSearchYear, btnTimeUpdated, btnViewManufacturer});

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnAdd, btnClear, btnDelete, btnUpdate});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblManufacturer)
                            .addComponent(txtManufacturer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblManufacturerVal))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblModel)
                            .addComponent(txtModel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblModelVal))
                        .addGap(18, 18, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap(12, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnAdd)
                            .addComponent(btnUpdate))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnDelete)
                            .addComponent(btnClear))
                        .addGap(24, 24, 24)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblYear)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblYearVal)))
                        .addGap(18, 18, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblSeats)
                            .addComponent(txtSeats, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblSeatVal))
                        .addGap(18, 18, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblSrNo)
                            .addComponent(txtSrNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblSrNoVal)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnSearchManufacturer)
                            .addComponent(btnSearchYear)
                            .addComponent(btnSearchMaintenance)
                            .addComponent(btnSearchCity))
                        .addGap(18, 18, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnSearchAvailability)
                            .addComponent(btnSearchSrNo)
                            .addComponent(btnSearchNoAva)
                            .addComponent(btnSearchModel))
                        .addGap(18, 18, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnViewManufacturer)
                            .addComponent(btnSearchSeats)
                            .addComponent(btnTimeUpdated))))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCity)
                    .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCityVal))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCertificate)
                    .addComponent(rbtnYes)
                    .addComponent(rbtnNo))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAvailable)
                    .addComponent(jRadioButton1)
                    .addComponent(jRadioButton2))
                .addContainerGap(9, Short.MAX_VALUE))
        );

        tblSearch.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Manufacturer", "Model", "Year", "Number of seats", "Serial Number", "City", "Maintainance Certificate", "Car Available"
            }
        ));
        jScrollPane2.setViewportView(tblSearch);

        tblView.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Manufacturer", "Model", "Year", "Number of Seats", "Serial Number", "City", "Maintenance Certificate", "Car Available"
            }
        ));
        tblView.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblViewMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblView);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setText("View Table");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 1446, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1446, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("Database Table");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtYearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtYearActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtYearActionPerformed

    private void txtSeatsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSeatsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSeatsActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        //ADD Button
        //Check for NULL
        if(txtManufacturer.getText().isEmpty()|| txtModel.getText().isEmpty()|| txtYear.getText().isEmpty()|| txtSeats.getText().isEmpty()|| txtSrNo.getText().isEmpty()|| txtCity.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Don't leave empty","Error",JOptionPane.ERROR_MESSAGE);
        }
        else{
            try{
                String manufacturer = txtManufacturer.getText();
                String model = txtModel.getText();
                String year = txtYear.getText();
                String seats = txtSeats.getText();
                String srno = txtSrNo.getText();
                String city = txtCity.getText();
                String certificate = rbtn1;
                String available = rbtn2;
                String time=timestamp.toString();
                carlist.add(new Cars(manufacturer, model, year, seats, srno, city, certificate, available)); //Add to carlist
                dtm.setRowCount(0);
                for(int i=0; i<carlist.size();i++){ //Print carlist on view table
                    Object[] objs = {carlist.get(i).manufacturer, carlist.get(i).model, carlist.get(i).year, carlist.get(i).seats, carlist.get(i).srno, carlist.get(i).city, carlist.get(i).certificate, carlist.get(i).available};
                    dtm.addRow(objs);
                }
                JOptionPane.showMessageDialog(this, "Information Added");
                clearField();
            }catch (Exception e){
                e.printStackTrace();
            }
        } 
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        //DELETE Button
        int dialogButton = JOptionPane.YES_NO_OPTION;
        int dialogResult = JOptionPane.showConfirmDialog(this, "Delete this data", "Delete", dialogButton);
        if(dialogResult == 0){
            dtm.removeRow(row);
            carlist.remove(row);
            dtm.setRowCount(0);
            for(int i = 0; i < carlist.size();i++){
                Object[] objs = {carlist.get(i).manufacturer, carlist.get(i).model, carlist.get(i).year, carlist.get(i).seats, carlist.get(i).srno, carlist.get(i).city, carlist.get(i).certificate, carlist.get(i).available};
                dtm.addRow(objs);
            }
            clearField();
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        //UPDATE Button
        String updatemanufacturer = txtManufacturer.getText();
        String updatemodel = txtModel.getText();
        String updateyear = txtYear.getText();
        String updateseats = txtSeats.getText();
        String updatesrno = txtSrNo.getText();
        String updatecity = txtCity.getText();
        String updatecertificate = rbtn1;
        String updateavailable = rbtn2;
        String time=timestamp.toString();
        carlist.get(row).manufacturer = updatemanufacturer;
        carlist.get(row).model = updatemodel;
        carlist.get(row).year = updateyear;
        carlist.get(row).seats = updateseats;
        carlist.get(row).srno = updatesrno;
        carlist.get(row).city = updatecity;
        carlist.get(row).certificate = updatecertificate;
        carlist.get(row).available = updateavailable;
        dtm.setRowCount(0); //Reset table and populate
        for(int i = 0; i < carlist.size();i++){
                Object[] objs = {carlist.get(i).manufacturer, carlist.get(i).model, carlist.get(i).year, carlist.get(i).seats, carlist.get(i).srno, carlist.get(i).city, carlist.get(i).certificate, carlist.get(i).available};
                dtm.addRow(objs);
            }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnSearchManufacturerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchManufacturerActionPerformed
        // TODO add your handling code here:
        String input = JOptionPane.showInputDialog(this, "Search Car Manufacturer");   
        queryRes = new ArrayList<>();
        boolean found = false;
        for(int i=0; i<carlist.size();i++){
                if(carlist.get(i).manufacturer.equalsIgnoreCase(input)){
                    found = true;
                    JOptionPane.showMessageDialog(btnSearchManufacturer, "Found", "Search Car",2);
                    String manufacturer = carlist.get(i).manufacturer;
                    String model = carlist.get(i).model;
                    String year = carlist.get(i).year;
                    String seats = carlist.get(i).seats;
                    String srno = carlist.get(i).srno;
                    String city = carlist.get(i).city;
                    String certificate = carlist.get(i).certificate;
                    String available = carlist.get(i).available;
                    queryRes.add(new Cars(manufacturer, model, year, seats, srno, city, certificate, available));//Add to temp ArrayList
                    dtm2.setRowCount(0);
                    for(int j=0; j<queryRes.size();j++){ //Print temp ArrayList
                        Object[] objs = {queryRes.get(j).manufacturer, queryRes.get(j).model, queryRes.get(j).year, queryRes.get(j).seats, queryRes.get(j).srno, queryRes.get(j).city, queryRes.get(j).certificate, queryRes.get(j).available};
                        dtm2.addRow(objs);
                    }
                }  
            }
            if(found == false){
            JOptionPane.showMessageDialog(btnSearchManufacturer, "Not Found", "Search Car", 2);
        }
    }//GEN-LAST:event_btnSearchManufacturerActionPerformed

    private void tblViewMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblViewMouseClicked
        // TODO add your handling code here:
        
        row = tblView.getSelectedRow();
        col = tblView.getSelectedColumn();
        System.out.println(row + "" + col);
        txtManufacturer.setText(dtm.getValueAt(row, 0).toString());
        txtModel.setText(dtm.getValueAt(row, 1).toString());
        txtYear.setText(dtm.getValueAt(row, 2).toString());
        txtSeats.setText(dtm.getValueAt(row, 3).toString());
        txtSrNo.setText(dtm.getValueAt(row, 4).toString());
        txtCity.setText(dtm.getValueAt(row, 5).toString());
        //txtCertificate.setText(dtm.getValueAt(row, 6).toString());
        //txtAvailable.setText(dtm.getValueAt(row, 7).toString());
        
    }//GEN-LAST:event_tblViewMouseClicked

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        // TODO add your handling code here:
        //CLEAR Button
        tblSearch.setModel(new DefaultTableModel(null, new String[]{"Manufacturer","Model","Year","Seats","SrNo","City","Certificate","Available"}));
        
    }//GEN-LAST:event_btnClearActionPerformed

    private void rbtnYesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnYesActionPerformed
        // TODO add your handling code here:
        rbtn1="Yes";
    }//GEN-LAST:event_rbtnYesActionPerformed

    private void btnSearchAvailabilityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchAvailabilityActionPerformed
        // TODO add your handling code here:
        String input = JOptionPane.showInputDialog(this, "Search Car Availability");   
        queryRes = new ArrayList<>();
        boolean found = false;
        for(int i=0; i<carlist.size();i++){
                if(carlist.get(i).available.equalsIgnoreCase(input)){
                    found = true;
                    JOptionPane.showMessageDialog(btnSearchAvailability, "Found", "Search Car",2);
                    String manufacturer = carlist.get(i).manufacturer;
                    String model = carlist.get(i).model;
                    String year = carlist.get(i).year;
                    String seats = carlist.get(i).seats;
                    String srno = carlist.get(i).srno;
                    String city = carlist.get(i).city;
                    String certificate = carlist.get(i).certificate;
                    String available = carlist.get(i).available;
                    queryRes.add(new Cars(manufacturer, model, year, seats, srno, city, certificate, available));
                    dtm2.setRowCount(0);
                    for(int j=0; j<queryRes.size();j++){
                        Object[] objs = {queryRes.get(j).manufacturer, queryRes.get(j).model, queryRes.get(j).year, queryRes.get(j).seats, queryRes.get(j).srno, queryRes.get(j).city, queryRes.get(j).certificate, queryRes.get(j).available};
                        dtm2.addRow(objs);
                    }
                }  
            }
            if(found == false){
            JOptionPane.showMessageDialog(btnSearchAvailability, "Not Found", "Search Car", 2);
        }
    }//GEN-LAST:event_btnSearchAvailabilityActionPerformed

    private void btnSearchYearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchYearActionPerformed
        // TODO add your handling code here:
        String input = JOptionPane.showInputDialog(this, "Search Manufacturing Year");   
        queryRes = new ArrayList<>();
        boolean found = false;
        for(int i=0; i<carlist.size();i++){
                if(carlist.get(i).year.equalsIgnoreCase(input)){
                    found = true;
                    JOptionPane.showMessageDialog(btnSearchYear, "Found", "Search Car",2);
                    String manufacturer = carlist.get(i).manufacturer;
                    String model = carlist.get(i).model;
                    String year = carlist.get(i).year;
                    String seats = carlist.get(i).seats;
                    String srno = carlist.get(i).srno;
                    String city = carlist.get(i).city;
                    String certificate = carlist.get(i).certificate;
                    String available = carlist.get(i).available;
                    queryRes.add(new Cars(manufacturer, model, year, seats, srno, city, certificate, available));
                    dtm2.setRowCount(0);
                    for(int j=0; j<queryRes.size();j++){
                        Object[] objs = {queryRes.get(j).manufacturer, queryRes.get(j).model, queryRes.get(j).year, queryRes.get(j).seats, queryRes.get(j).srno, queryRes.get(j).city, queryRes.get(j).certificate, queryRes.get(j).available};
                        dtm2.addRow(objs);
                    }
                }  
            }
            if(found == false){
            JOptionPane.showMessageDialog(btnSearchYear, "Not Found", "Search Car", 2);
        }
    }//GEN-LAST:event_btnSearchYearActionPerformed

    private void btnSearchSrNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchSrNoActionPerformed
        // TODO add your handling code here:
        String input = JOptionPane.showInputDialog(this, "Search Serial Number");   
        queryRes = new ArrayList<>();
        boolean found = false;
        for(int i=0; i<carlist.size();i++){
                if(carlist.get(i).srno.equalsIgnoreCase(input)){
                    found = true;
                    JOptionPane.showMessageDialog(btnSearchSrNo, "Found", "Search Car",2);
                    String manufacturer = carlist.get(i).manufacturer;
                    String model = carlist.get(i).model;
                    String year = carlist.get(i).year;
                    String seats = carlist.get(i).seats;
                    String srno = carlist.get(i).srno;
                    String city = carlist.get(i).city;
                    String certificate = carlist.get(i).certificate;
                    String available = carlist.get(i).available;
                    queryRes.add(new Cars(manufacturer, model, year, seats, srno, city, certificate, available));
                    dtm2.setRowCount(0);
                    for(int j=0; j<queryRes.size();j++){
                        Object[] objs = {queryRes.get(j).manufacturer, queryRes.get(j).model, queryRes.get(j).year, queryRes.get(j).seats, queryRes.get(j).srno, queryRes.get(j).city, queryRes.get(j).certificate, queryRes.get(j).available};
                        dtm2.addRow(objs);
                    }
                }  
            }
            if(found == false){
            JOptionPane.showMessageDialog(btnSearchSrNo, "Not Found", "Search Car", 2);
        }
    }//GEN-LAST:event_btnSearchSrNoActionPerformed

    private void btnSearchMaintenanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchMaintenanceActionPerformed
        // TODO add your handling code here:
        String input = JOptionPane.showInputDialog(this, "Search Valid Maintenance");   
        queryRes = new ArrayList<>();
        boolean found = false;
        for(int i=0; i<carlist.size();i++){
                if(carlist.get(i).certificate.equalsIgnoreCase(input)){
                    found = true;
                    JOptionPane.showMessageDialog(btnSearchMaintenance, "Found", "Search Car",2);
                    String manufacturer = carlist.get(i).manufacturer;
                    String model = carlist.get(i).model;
                    String year = carlist.get(i).year;
                    String seats = carlist.get(i).seats;
                    String srno = carlist.get(i).srno;
                    String city = carlist.get(i).city;
                    String certificate = carlist.get(i).certificate;
                    String available = carlist.get(i).available;
                    queryRes.add(new Cars(manufacturer, model, year, seats, srno, city, certificate, available));
                    dtm2.setRowCount(0);
                    for(int j=0; j<queryRes.size();j++){
                        Object[] objs = {queryRes.get(j).manufacturer, queryRes.get(j).model, queryRes.get(j).year, queryRes.get(j).seats, queryRes.get(j).srno, queryRes.get(j).city, queryRes.get(j).certificate, queryRes.get(j).available};
                        dtm2.addRow(objs);
                    }
                }  
            }
            if(found == false){
            JOptionPane.showMessageDialog(btnSearchMaintenance, "Not Found", "Search Car", 2);
        }
    }//GEN-LAST:event_btnSearchMaintenanceActionPerformed

    private void btnSearchNoAvaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchNoAvaActionPerformed
        // TODO add your handling code here:
        int Ava=0; //Available variable
        int NoAva=0; //Not available variable
        for(int i=0; i<carlist.size();i++){
                if(carlist.get(i).available.contains("Yes")){
                    Ava++;     
                }
                if(carlist.get(i).available.contains("No")){
                    NoAva++;    
                }
            }
            JOptionPane.showMessageDialog(null, "Avaliable: "+Ava);
            JOptionPane.showMessageDialog(null, "Not Avaliable: "+NoAva);
    }//GEN-LAST:event_btnSearchNoAvaActionPerformed

    private void btnSearchCityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchCityActionPerformed
        // TODO add your handling code here:
        String input = JOptionPane.showInputDialog(this, "Search City");   
        queryRes = new ArrayList<>();
        boolean found = false;
        for(int i=0; i<carlist.size();i++){
                if(carlist.get(i).city.equalsIgnoreCase(input)){
                    found = true;
                    JOptionPane.showMessageDialog(btnSearchCity, "Found", "Search Car",2);
                    String manufacturer = carlist.get(i).manufacturer;
                    String model = carlist.get(i).model;
                    String year = carlist.get(i).year;
                    String seats = carlist.get(i).seats;
                    String srno = carlist.get(i).srno;
                    String city = carlist.get(i).city;
                    String certificate = carlist.get(i).certificate;
                    String available = carlist.get(i).available;
                    queryRes.add(new Cars(manufacturer, model, year, seats, srno, city, certificate, available));
                    dtm2.setRowCount(0);
                    for(int j=0; j<queryRes.size();j++){
                        Object[] objs = {queryRes.get(j).manufacturer, queryRes.get(j).model, queryRes.get(j).year, queryRes.get(j).seats, queryRes.get(j).srno, queryRes.get(j).city, queryRes.get(j).certificate, queryRes.get(j).available};
                        dtm2.addRow(objs);
                    }
                }  
            }
            if(found == false){
            JOptionPane.showMessageDialog(btnSearchCity, "Not Found", "Search Car", 2);
        }
    }//GEN-LAST:event_btnSearchCityActionPerformed

    private void btnSearchModelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchModelActionPerformed
        // TODO add your handling code here:
        String input = JOptionPane.showInputDialog(this, "Search Car Model");   
        queryRes = new ArrayList<>();
        boolean found = false;
        for(int i=0; i<carlist.size();i++){
                if(carlist.get(i).model.equalsIgnoreCase(input)){
                    found = true;
                    JOptionPane.showMessageDialog(btnSearchModel, "Found", "Search Car",2);
                    String manufacturer = carlist.get(i).manufacturer;
                    String model = carlist.get(i).model;
                    String year = carlist.get(i).year;
                    String seats = carlist.get(i).seats;
                    String srno = carlist.get(i).srno;
                    String city = carlist.get(i).city;
                    String certificate = carlist.get(i).certificate;
                    String available = carlist.get(i).available;
                    queryRes.add(new Cars(manufacturer, model, year, seats, srno, city, certificate, available));
                    dtm2.setRowCount(0);
                    for(int j=0; j<queryRes.size();j++){
                        Object[] objs = {queryRes.get(j).manufacturer, queryRes.get(j).model, queryRes.get(j).year, queryRes.get(j).seats, queryRes.get(j).srno, queryRes.get(j).city, queryRes.get(j).certificate, queryRes.get(j).available};
                        dtm2.addRow(objs);
                    }
                }  
            }
            if(found == false){
            JOptionPane.showMessageDialog(btnSearchModel, "Not Found", "Search Car", 2);
        }
    }//GEN-LAST:event_btnSearchModelActionPerformed

    private void btnViewManufacturerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewManufacturerActionPerformed
        // TODO add your handling code here:
        queryRes = new ArrayList<>();
        for(int i=0; i<carlist.size();i++){
            String manufacturer = carlist.get(i).manufacturer;
            String model = carlist.get(i).model;
            String year = carlist.get(i).year;
            String seats = carlist.get(i).seats;
            String srno = carlist.get(i).srno;
            String city = carlist.get(i).city;
            String certificate = carlist.get(i).certificate;
            String available = carlist.get(i).available;
            queryRes.add(new Cars(manufacturer, model, year, seats, srno, city, certificate, available));
            ArrayList<Cars> newList = new ArrayList<Cars>(new HashSet<Cars>(queryRes));
            for(int j=0; j<newList.size();j++){
                        Object[] objs = {newList.get(j).manufacturer};
                        dtm2.addRow(objs);
                    }
            /*JOptionPane.showMessageDialog(null, "Manufacturers: "+manufacturer);
            while(j.hasNext())  
            {  
                JOptionPane.showMessageDialog(null, "Manufacturers: "+j.next());  //j.next()
            } */ 
        }
    }//GEN-LAST:event_btnViewManufacturerActionPerformed

    private void btnSearchSeatsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchSeatsActionPerformed
        // TODO add your handling code here:
        String min = JOptionPane.showInputDialog(this, "Enter minumum seats"); //Minimum Seats 
        String max = JOptionPane.showInputDialog(this, "Enter maximum seats"); //Maximum Seats
        int minseats = Integer.parseInt(min);
        int maxseats = Integer.parseInt(max);
        queryRes = new ArrayList<>();
        boolean found = false;
        for(int i=0; i<carlist.size();i++){
                if(Integer.parseInt(carlist.get(i).seats) >= minseats && Integer.parseInt(carlist.get(i).seats) <= maxseats){
                    found = true;
                    JOptionPane.showMessageDialog(btnSearchModel, "Found", "Search Car",2);
                    String manufacturer = carlist.get(i).manufacturer;
                    String model = carlist.get(i).model;
                    String year = carlist.get(i).year;
                    String seats = carlist.get(i).seats;
                    String srno = carlist.get(i).srno;
                    String city = carlist.get(i).city;
                    String certificate = carlist.get(i).certificate;
                    String available = carlist.get(i).available;
                    queryRes.add(new Cars(manufacturer, model, year, seats, srno, city, certificate, available));
                    dtm2.setRowCount(0);
                    for(int j=0; j<queryRes.size();j++){
                        Object[] objs = {queryRes.get(j).manufacturer, queryRes.get(j).model, queryRes.get(j).year, queryRes.get(j).seats, queryRes.get(j).srno, queryRes.get(j).city, queryRes.get(j).certificate, queryRes.get(j).available};
                        dtm2.addRow(objs);
                    }
                }  
            }
            if(found == false){
            JOptionPane.showMessageDialog(btnSearchModel, "Not Found", "Search Car", 2);
        }    
    }//GEN-LAST:event_btnSearchSeatsActionPerformed

    private void rbtnNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnNoActionPerformed
        // TODO add your handling code here:
        //NO
        rbtn1="No";
    }//GEN-LAST:event_rbtnNoActionPerformed

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        // TODO add your handling code here:
        rbtn2="Yes";
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed
        // TODO add your handling code here:
        rbtn2="No";
    }//GEN-LAST:event_jRadioButton2ActionPerformed

    private void btnTimeUpdatedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimeUpdatedActionPerformed
        // TODO add your handling code here:
        //TimeStamp Button
        JOptionPane.showMessageDialog(null, "Last update: "+timestamp);
    }//GEN-LAST:event_btnTimeUpdatedActionPerformed

    private void txtManufacturerKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtManufacturerKeyReleased
        // TODO add your handling code here:
        //Manufacturer Validation
        String PATTERN = "^[a-zA-Z0-9]{2,30}$";
        Pattern patt=Pattern.compile(PATTERN);
        Matcher match=patt.matcher(txtManufacturer.getText());
        if(!match.matches()){
            lblManufacturerVal.setText("Invalid Manufacturer");
        }
        else{
            lblManufacturerVal.setText(null);
        }
    }//GEN-LAST:event_txtManufacturerKeyReleased

    private void txtModelKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtModelKeyReleased
        // TODO add your handling code here:
        //Model Validation
        String PATTERN = "^[a-zA-Z0-9]{2,30}$";
        Pattern patt=Pattern.compile(PATTERN);
        Matcher match=patt.matcher(txtModel.getText());
        if(!match.matches()){
            lblModelVal.setText("Invalid Model");
        }
        else{
            lblModelVal.setText(null);
        }
    }//GEN-LAST:event_txtModelKeyReleased

    private void txtYearKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtYearKeyReleased
        // TODO add your handling code here:
        //Year Validation
        String PATTERN = "^[12][0-9]{3}$";
        Pattern patt=Pattern.compile(PATTERN);
        Matcher match=patt.matcher(txtYear.getText());
        if(!match.matches()){
            lblYearVal.setText("Invalid Year");
        }
        else{
            lblYearVal.setText(null);
        } 
    }//GEN-LAST:event_txtYearKeyReleased

    private void txtSeatsKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSeatsKeyReleased
        // TODO add your handling code here:
        //Seat Validation
        String PATTERN = "^[0-9]{1,1000}$";
        Pattern patt=Pattern.compile(PATTERN);
        Matcher match=patt.matcher(txtSeats.getText());
        if(!match.matches()){
            lblSeatVal.setText("Invalid Seats");
        }
        else{
            lblSeatVal.setText(null);
        }   
    }//GEN-LAST:event_txtSeatsKeyReleased

    private void txtSrNoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSrNoKeyReleased
        // TODO add your handling code here:
        //Serial Number Validation
        String PATTERN = "^[0-9]{5}$";
        Pattern patt=Pattern.compile(PATTERN);
        Matcher match=patt.matcher(txtSrNo.getText());
        if(!match.matches()){
            lblSrNoVal.setText("Invalid Serial Number");
        }
        else{
            lblSrNoVal.setText(null);
        }
    }//GEN-LAST:event_txtSrNoKeyReleased

    private void txtCityKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCityKeyReleased
        // TODO add your handling code here:
        //City Validation
        String PATTERN = "^([a-zA-Z\\u0080-\\u024F]+(?:. |-| |'))*[a-zA-Z\\u0080-\\u024F]*$";
        Pattern patt=Pattern.compile(PATTERN);
        Matcher match=patt.matcher(txtCity.getText());
        if(!match.matches()){
            lblCityVal.setText("Invalid City");
        }
        else{
            lblCityVal.setText(null);
        }
    }//GEN-LAST:event_txtCityKeyReleased
    
    private void clearField() {
        txtManufacturer.requestFocus();
        txtManufacturer.setText("");
        txtModel.setText("");
        txtYear.setText("");
        txtSeats.setText("");
        txtSrNo.setText("");
        txtCity.setText(""); 
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnSearchAvailability;
    private javax.swing.JButton btnSearchCity;
    private javax.swing.JButton btnSearchMaintenance;
    private javax.swing.JButton btnSearchManufacturer;
    private javax.swing.JButton btnSearchModel;
    private javax.swing.JButton btnSearchNoAva;
    private javax.swing.JButton btnSearchSeats;
    private javax.swing.JButton btnSearchSrNo;
    private javax.swing.JButton btnSearchYear;
    private javax.swing.JButton btnTimeUpdated;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnViewManufacturer;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.ButtonGroup buttonGroup4;
    private javax.swing.ButtonGroup buttonGroup5;
    private javax.swing.ButtonGroup buttonGroup6;
    private javax.swing.ButtonGroup buttonGroup7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblAvailable;
    private javax.swing.JLabel lblCertificate;
    private javax.swing.JLabel lblCity;
    private javax.swing.JLabel lblCityVal;
    private javax.swing.JLabel lblManufacturer;
    private javax.swing.JLabel lblManufacturerVal;
    private javax.swing.JLabel lblModel;
    private javax.swing.JLabel lblModelVal;
    private javax.swing.JLabel lblSeatVal;
    private javax.swing.JLabel lblSeats;
    private javax.swing.JLabel lblSrNo;
    private javax.swing.JLabel lblSrNoVal;
    private javax.swing.JLabel lblYear;
    private javax.swing.JLabel lblYearVal;
    private javax.swing.JRadioButton rbtnNo;
    private javax.swing.JRadioButton rbtnYes;
    private javax.swing.JTable tblSearch;
    private javax.swing.JTable tblView;
    private javax.swing.JTextField txtCity;
    private javax.swing.JTextField txtManufacturer;
    private javax.swing.JTextField txtModel;
    private javax.swing.JTextField txtSeats;
    private javax.swing.JTextField txtSrNo;
    private javax.swing.JTextField txtYear;
    // End of variables declaration//GEN-END:variables
 
}
